$(document).ready(function () {
    $("#chatform").submit(function (e) {
        e.preventDefault();
        $.getJSON("/say", { message: $("#chatmessage").attr("value") }, function(o) {
            if(o.status == "private") {
                display("*** " + o.message);
            }
        });

        // handle the chat history
        while(histDown.length > 1) {
            histUp.push(histDown.pop);
        }
        histDown = [];
        histUp.splice(10,10); // removes up to 10 elements starting from index 10

        histUp.push($("#chatmessage").attr("value"));
        $("#chatmessage").attr("value", "");
    });

    $("#chatform").bind("ajaxComplete", function(e) {
        if(needsToCheckIn) {
            needsToCheckIn = false;
            if(waitBeforeCheckIn) {
                waitBeforeCheckIn = false;
                var junk = setTimeout(function() { checkIn(); }, 5000); // wait 5 seconds
            } else {
                checkIn();
            }
        }
    });

    $("#chatmessage").keypress(keyHandler);

    checkIn();
});

var needsToCheckIn = false;
var waitBeforeCheckIn = false;

var mapTokens = [];
var userVars  = [];

function checkIn () {
    $.ajax({ dataType: "json", url: "/check", data: { }, cache: false,
    success: function(data,textStatus,xml) {
        if(data.type == "chat") {
            display(data.sender + ": " + data.content);
        } else if(data.type == "board") {
            updateMap(data.tokens);
        } else if(data.type == "whisper") {
            display("Whisper from " + data.sender + ": " + data.content);
        } else if(data.type == "vars") {
            updateVars(data.vars);
        }
    }, 
    error: function() {
        waitBeforeCheckIn = true;
    }, 
    complete: function() {
        needsToCheckIn = true;
    }});
}

function display (msg) {
    var ta = $("#chattextarea");
    ta.html(ta.html() + msg + "\n");
    ta.scrollTop(1000000);
}


function updateMap(newTokens) {
    // first hack: just remove them all and replace them with the new ones
    $("td.grid").html("");

    console.log(newTokens);

    for (i in newTokens) {
        var t = newTokens[i];
        var squareId = "sq_" + t.x + "x" + t.y;
        var square = $("#"+squareId);
        square.html("<img class=\"grid\" src=\"/static/images/" + t.image + "\" />");
    }

    mapTokens = newTokens;
}

function updateVars(newVars) {
    var varsHtml = "<table class='vars'><tr class='vars'><td class='vars'>Nick</td><td class='vars'>Variable</td><td class='vars'>Value</td></tr>";

    for(i in newVars){
        var v = newVars[i];
        varsHtml += "<tr class='vars'><td class='vars'>" + v.nick + "</td><td class='vars'>" + v.var + "</td><td class='vars'>" + v.value + "</td></tr>";
        $("#varstable").html(varsHtml);
    }

    userVars = newVars;
}


// a Haskell-style zipper for the history
var histUp = [];
var histDown = [];
var chatMessage = $("#chatmessage");

function keyHandler(e) {
    alert("run: " + e.keyCode);
    if(e.keyCode == 38) { // up
        e.preventDefault();

        if(histUp.length > 0) {
            histDown.push(chatMessage.attr("value"));
            chatMessage.attr("value", histUp.pop());
        }
    } else if(e.keyCode == 40) { //down
        e.preventDefault();

        if(histDown.length > 0) { 
            histUp.push(chatMessage.attr("value"));
            chatMessage.attr("value", histDown.pop());
        }
    }
}



